name: Package CI


on:
  push:
    paths:
      - ".github/workflows/main.yml"
      - "deps.edn"
      - "src/**/*.clj"
      - "src/**/*.cljc"
      - "test/**/*.clj"
      - "test/**/*.cljc"
    branches:
      - main
  pull_request:
    branches:
      - main


env:
  clojure-cli: "latest"
  java-version: "19"
  library: io.github.ajchemist/jsoup


jobs:
  test:
    if: "!(contains(github.event.head_commit.message, 'ci skip') || contains(github.event.head_commit.message, 'skip ci'))"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        clojure: [ "1.11" ]
    name: test @ CLJ = ${{ matrix.clojure }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache local maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache gitlibs
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.java-version }}
      - name: Set up clojure-cli
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          cli: ${{ env.clojure-cli }}
      - name: Test runner
        env:
          TESTOPT: "-X:provided:test:test-runner"
        run: |
          clojure $TESTOPT


  package:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache local maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache gitlibs
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-
      # settings.xml
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.java-version }}
      - name: Preparation
        run: |
          cp .ci/settings.xml ~/.m2/settings.xml
          mvn dependency:get -Dartifact=org.apache.maven.plugins:maven-deploy-plugin:2.8


      - name: Set up clojure-cli
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          cli: ${{ env.clojure-cli }}


      - name: Make package
        run: |
          clojure -T:build jar :lib ${{ env.library }}


      - name: Deploy
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
        run: mvn deploy:deploy-file -DpomFile="pom.xml" -Dfile="target/package.jar" -Dpackaging=jar -DrepositoryId="clojars" -Durl="https://clojars.org/repo"


      - name: Push a commit using the built-in token
        run: |
          git config --local user.name $GITHUB_ACTOR
          git config --local user.email $(git --no-pager show --format="<%ae>" -s HEAD)
          git add -- pom.xml
          VERSION="$(clojure -X:build:maven-tool print-pom-version)"
          git commit -m "$VERSION [ci skip]"
          git tag $VERSION
          git remote -v
          git push
          git push --tags


      - name: Discord action job digest notification
        uses: sarisia/actions-status-discord@v1
        if: always() # Pick up events even if the job fails or is canceled.
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
